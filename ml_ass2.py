# -*- coding: utf-8 -*-
"""ML ass2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qzc_CzhaXj1cZXgjiNy04Rwmb1VIKJGy
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('emails.csv')
df

df.shape

df.isna().sum()

df.dropna(inplace=True)
df.drop(columns='Email No.', inplace=True)

df['Prediction'] = df['Prediction'].replace({0:'Not spam', 1:'Spam'})
df

X = df.drop(columns='Prediction',axis = 1)
Y = df['Prediction']

X.columns

Y.head()

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2,random_state=1)

x_train.isna().sum()

from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
import matplotlib.pyplot as plt  # Assuming you need this for plotting

KN = KNeighborsClassifier
scores = {}
scores_list = []
max_stats = {'n': 3, 'M': 0.00}

def calcKNN(n):
    knn = KN(n_neighbors=n, p=1)
    knn.fit(x_train, y_train)
    y_pred = knn.predict(x_test)
    M = metrics.accuracy_score(y_test, y_pred)
    M = M * 100
    scores[n] = metrics.accuracy_score(y_test, y_pred)
    scores_list.append(metrics.accuracy_score(y_test, y_pred))
    if M > max_stats['M']:
        max_stats['M'] = M
        max_stats['n'] = n

for i in range(3, 30):
    calcKNN(i)

plt.plot(range(3, 30), scores_list)
plt.xlabel("Value of K")
plt.ylabel("Accuracy")
print(max_stats)

knn_model =KNeighborsClassifier(n_neighbors=4)
knn_model.fit(x_train,y_train)
y_pred =knn_model.predict(x_test)
print(metrics.classification_report(y_test, y_pred))

from sklearn.svm import SVC
svm_model =SVC()
svm_model.fit(x_train,y_train)

y_pred =svm_model.predict(x_test)
print(metrics.classification_report(y_test, y_pred))